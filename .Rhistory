}
}
return(mat)
}
x=Biweekly(Bedwellty_SRA)
mat = data.frame()
dim(London_SRA)
Cumulative(London_SRA)
x= London_SRA[1:20,]
Cumulative(x)
x= as.matrix(x)
Cumulative(x)
Biweekly=function(Data){
n=nrow(Data)/2
m=ncol(Data)
mat = matrix( ,n,m)
for (i in 0:n - 1 ){
mat[i + 1,]= rep(0, m)
for (j in 1:2) {
x = (2*i)+j
mat[i+1,] = c(mat[i+1,]) + c(Data[x,])
}
}
return(mat)
}
Biweekly(x)
x<-London_SRA
x= as.matrix(x)
Biweekly(x)
"creating City datasets"
for (names in levels(measles$town)) {
tmp <- subset(measles, town == names)
tmp %>%
dcast(date~"cases", fun.aggregate = sum) %>%
mutate(year=as.integer(format(date,"%Y"))) %>%
subset(year>=1944 & year<1965) %>%
mutate(time=(julian(date,origin=as.Date("1944-01-01")))/365.25+1944) %>%
subset(time>1944 & time<1965, select=c(time,cases)) -> tmp
##################
tmp1<- subset(demog, town == names)
tmp1<-tmp1[,-1]
tmp1 %>% subset(year>=1944 & year<1964) %>%
summarize(
time= tmp$time,
birthrate=predict(smooth.spline(x=year+0.5,y=births),x=time-4)$y
) -> covar
merge(tmp,covar, by = "time")->x
NewData<- as.matrix(x)
Fdat = Biweekly(NewData)# Biweekly data
#assign( paste0(names,"_SRA"),x)
}
View(Fdat)
1095/2
x=1:9
x[4:end]
x[4:end(x)]
tail(x, -(1:3))
tail(x, length(x)-7)
x=1:21
tail(x, length(x)-7)
head(x, length(x)-7)
Fdat.d = cbind(head(Fdat, length(Fdat)-8)[,1],Fdat[-(1:8),2]) # Adjusting for the  delay caused by maternal immunity
head(Fdat, length(Fdat)-8)[,1]
Fdat[-(1:8),2]
dim(Fdat)
head(Fdat, length(Fdat)
head(Fdat, length(Fdat) -8)
dim(Fdat)
Fdat.d = cbind(head(Fdat, length(Fdat) -8)[,1],Fdat[-(1:8),2]) # Adjusting for the  delay caused by maternal immunity
547-8
Fdat.d = cbind(Fdat[1:539,1],Fdat[-(1:8),2]) # Adjusting for the  delay caused by maternal immunity
View(Fdat.d)
Fdat.d = cbind(Fdat[1:539,2],Fdat[-(1:8),3]) # Adjusting for the  delay caused by maternal immunity
Fdat.d = cbind(Fdat[1:539,2],Fdat[-(1:8),3]) # Adjusting for the  delay caused by maternal immunity
Fdat.d = cbind(Fdat[-(1:8),2],Fdat[1:539,3]) # Adjusting for the  delay caused by maternal immunity
y<-matrix(rep(1,20),10,2)
y
Cumulative(y)
library(pomp)
library(plyr)
library(reshape2)
library(magrittr)
library(ggplot2)
library(foreach)
library(doParallel)
registerDoParallel()
Biweekly=function(Data){
n=nrow(Data)/2
m=ncol(Data)
mat = matrix( ,n,m)
for (i in 0:n - 1 ){
mat[i + 1,]= rep(0, m)
for (j in 1:2) {
x = (2*i)+j
mat[i+1,] = c(mat[i+1,]) + c(Data[x,])
}
}
return(mat)
}
Cumulative = function(Data){
n=nrow(Data)
m=ncol(Data)
Dta=matrix( ,n,m)
Dta[1,] = Data[1,]
for (i in 2:n){
Dta[i,] = Dta[i-1,] + Data[i,]
}
return(Dta)
}
"Loading dataset"
load("~/GitHub/Measles/twentycities.rda")
demog$town = factor(demog$town)
measles$town = factor(measles$town)
"creating City datasets"
for (names in levels(measles$town)) {
tmp <- subset(measles, town == names)
tmp %>%
dcast(date~"cases", fun.aggregate = sum) %>%
mutate(year=as.integer(format(date,"%Y"))) %>%
subset(year>=1944 & year<1965) %>%
mutate(time=(julian(date,origin=as.Date("1944-01-01")))/365.25+1944) %>%
subset(time>1944 & time<1965, select=c(time,cases)) -> tmp
##################
tmp1<- subset(demog, town == names)
tmp1<-tmp1[,-1]
tmp1 %>% subset(year>=1944 & year<1964) %>%
summarize(
time= tmp$time,
birthrate=predict(smooth.spline(x=year+0.5,y=births),x=time-4)$y
) -> covar
merge(tmp,covar, by = "time")->x
NewData<- as.matrix(x)
Fdat = Biweekly(NewData)# Biweekly data
Fdat.d = cbind(Fdat[-(1:8),2],Fdat[1:539,3]) # Adjusting for the  delay caused by maternal immunity
Fdat1 = Cumulative(Fdat.d)
NewData1 = cbind(Time=seq(from = 1944, to= 1964.983, times =539),CIncidence=Fdat1[,1],CBirths=Fdat1[,2])
assign( paste0(names,"_SRA"),NewData1)
}
View(Bedwellty_SRA)
View(Bradford_SRA)
library(pomp)
library(plyr)
library(reshape2)
library(magrittr)
library(ggplot2)
library(foreach)
library(doParallel)
registerDoParallel()
Biweekly=function(Data){
n=nrow(Data)/2
m=ncol(Data)
mat = matrix( ,n,m)
for (i in 0:n - 1 ){
mat[i + 1,]= rep(0, m)
for (j in 1:2) {
x = (2*i)+j
mat[i+1,] = c(mat[i+1,]) + c(Data[x,])
}
}
return(mat)
}
Cumulative = function(Data){
n=nrow(Data)
m=ncol(Data)
Dta=matrix( ,n,m)
Dta[1,] = Data[1,]
for (i in 2:n){
Dta[i,] = Dta[i-1,] + Data[i,]
}
return(Dta)
}
"Loading dataset"
load("~/GitHub/Measles/twentycities.rda")
demog$town = factor(demog$town)
measles$town = factor(measles$town)
"creating City datasets"
for (names in levels(measles$town)) {
tmp <- subset(measles, town == names)
tmp %>%
dcast(date~"cases", fun.aggregate = sum) %>%
mutate(year=as.integer(format(date,"%Y"))) %>%
subset(year>=1944 & year<1965) %>%
mutate(time=(julian(date,origin=as.Date("1944-01-01")))/365.25+1944) %>%
subset(time>1944 & time<1965, select=c(time,cases)) -> tmp
##################
tmp1<- subset(demog, town == names)
tmp1<-tmp1[,-1]
tmp1 %>% subset(year>=1944 & year<1964) %>%
summarize(
time= tmp$time,
birthrate=predict(smooth.spline(x=year+0.5,y=births),x=time-4)$y
) -> covar
merge(tmp,covar, by = "time")->x
NewData<- as.matrix(x)
Fdat = Biweekly(NewData)# Biweekly data
Fdat.d = cbind(Fdat[-(1:8),2],Fdat[1:539,3]) # Adjusting for the  delay caused by maternal immunity
Fdat1 = Cumulative(Fdat.d)
NewData1 = cbind(Time=seq(from = 1944, to= 1964.983, length.out =539),CIncidence=Fdat1[,1],CBirths=Fdat1[,2])
assign( paste0(names,"_SRA"),NewData1)
}
seq(from = 1944, to= 1964.983, length.out =539)
library(pomp)
library(plyr)
library(reshape2)
library(magrittr)
library(ggplot2)
library(foreach)
library(doParallel)
registerDoParallel()
Biweekly=function(Data){
n=nrow(Data)/2
m=ncol(Data)
mat = matrix( ,n,m)
for (i in 0:n - 1 ){
mat[i + 1,]= rep(0, m)
for (j in 1:2) {
x = (2*i)+j
mat[i+1,] = c(mat[i+1,]) + c(Data[x,])
}
}
return(mat)
}
Cumulative = function(Data){
n=nrow(Data)
m=ncol(Data)
Dta=matrix( ,n,m)
Dta[1,] = Data[1,]
for (i in 2:n){
Dta[i,] = Dta[i-1,] + Data[i,]
}
return(Dta)
}
"Loading dataset"
load("~/GitHub/Measles/twentycities.rda")
demog$town = factor(demog$town)
measles$town = factor(measles$town)
"creating City datasets"
for (names in levels(measles$town)) {
tmp <- subset(measles, town == names)
tmp %>%
dcast(date~"cases", fun.aggregate = sum) %>%
mutate(year=as.integer(format(date,"%Y"))) %>%
subset(year>=1944 & year<1965) %>%
mutate(time=(julian(date,origin=as.Date("1944-01-01")))/365.25+1944) %>%
subset(time>1944 & time<1965, select=c(time,cases)) -> tmp
##################
tmp1<- subset(demog, town == names)
tmp1<-tmp1[,-1]
tmp1 %>% subset(year>=1944 & year<1964) %>%
summarize(
time= tmp$time,
birthrate=predict(smooth.spline(x=year+0.5,y=births),x=time-4)$y
) -> covar
merge(tmp,covar, by = "time")->x
NewData<- as.matrix(x)
Fdat = Biweekly(NewData)# Biweekly data
Fdat.d = cbind(Fdat[-(1:8),2],Fdat[1:539,3]) # Adjusting for the  delay caused by maternal immunity
Fdat1 = Cumulative(Fdat.d)
NewData1 = cbind(Time=seq(from = 1944, to= 1964.983, length.out = length(Fdat1)),CIncidence=Fdat1[,1],CBirths=Fdat1[,2])
assign( paste0(names,"_SRA"),NewData1)
}
View(Hastings_SRA)
View(Bedwellty_SRA)
View(London_SRA)
t = seq(0,9, by = 9/(468))[1:(468)]
IData = read.table(file.choose())
IData = IData[2:469,2]
BData = read.table(file.choose())
BData = (BData[,2])/13 #Data is recorded quaterly, thus the resulting data is weekly
BData = rep(BData, each = 13)
plot(t,BData, type="l", col="blue")
plot(t,IData, type="l", col="red")
plot(t,BData, type="l", col="blue")
lines(t,IData, type="l", col="red")
plot(t,IData, type="l", col="red")
plot(t,BData, type="l", col="blue")
plot(t,IData, type="l", col="red")
lines(t,BData, type="l", col="blue")
time = seq(0,9, by = 9/(226))[1:(226)]
NewData = cbind(IData,BData)
Biweekly=function(Data){
n=nrow(Data)/2
m=ncol(Data)
mat = matrix( ,n,m)
for (i in 0:n - 1 ){
mat[i + 1,]= rep(0, m)
for (j in 1:2) {
x = (2*i)+j
mat[i+1,] = c(mat[i+1,]) + c(Data[x,])
}
}
return(mat)
}
Cumulative = function(Data){
n=nrow(Data)
m=ncol(Data)
Dta=matrix( ,n,m)
Dta[1,] = Data[1,]
for (i in 2:n){
Dta[i,] = Dta[i-1,] + Data[i,]
}
return(Dta)
}
Fdat = Biweekly(NewData)# Biweekly data
sigmaU = 1
set.seed(143)
U = rnorm(226,0,sd=sigmaU)
Fdat.d = cbind(Fdat[-(227:234),1],Fdat[-(1:8),2],U) # Adjusting for the  delay caused by maternal immunity
Fdat1 = Cumulative(Fdat.d) # Cumulated table
NewData1 = cbind(Time=time,CIncidence=Fdat1[,1],CBirths=Fdat1[,2], U=Fdat1[,3])
NewData2 = as.data.frame(NewData1 )
head(NewData2)
fit <- lm(CBirths ~ CIncidence, data=NewData2)
summary(fit) # show results
plot(predict(fit)~CIncidence, data = NewData2)
confint(fit, level=0.95) # CIs for model parameters
anova(fit) # anova table
require(locpol)# Package for estimating the parameters of local regression.
SSE1 = function(h){
ESS = 0
d <- data.frame(X = NewData2$CIncidence)
d$Y <- NewData2$CBirths
sd = sqrt(var(d$X))
lpest1 <- locPolSmootherC(d$X,d$Y , d$X, bw = h * sd, deg = 1, gaussK)
lpest2 <- locpol(Y ~ X, data = d, bw = h * sd , kernel = gaussK, deg = 1, xeval = d$X)
ESS = sum(lpest2$residuals^2)
return(ESS)
}
SSE2 = function(h){
ESS = 0
d <- data.frame(X = NewData2$CIncidence)
d$Y <- NewData2$CBirths
sd = sqrt(var(d$X))
fit <- lm(CBirths ~ CIncidence, data=NewData2)
lpest1 <- locPolSmootherC(d$X,d$Y , d$X, bw = h * sd, deg = 1, gaussK)
lpest2 <- locpol(Y ~ X, data = d, bw = h * sd , kernel = gaussK, deg = 1, xeval = d$X)
ESS = sum(lpest2$residuals^2)
error = fitted.values(fit) - ( lpest1$beta0 + lpest2$lpFit$Y1 * lpest2$lpFit[,1])
ESS1 = sum(error^2)
return(c(ESS/1e+12,ESS1/1e+15))
}
x = seq(.1,10,.01)
y = sapply(x,SSE2)
plot(y[2,] ~ x, type = "l", col = "red", xlab = "h", ylab = "SSE", ylim= c(0,15))
lines(y[1,] ~ x, col = "blue")
y
y[1]
y[y[1,]==y[2,]]
y[y[1,]-y[2,]<0.002]
y[y[1,]-y[2,]<0.000000002]
y = dapply(x,SSE2)
y = dpply(x,SSE2)
y = tapply(x,SSE2)
require(plyr)
y = dpply(x,SSE2)
y = ddply(x,SSE2)
y = saply(x,SSE2)
y = sapply(x,SSE2)
y[1,]
y[2,]
y[2,]-y[1,]
seq(.1,10,.01)[14]
x[min(abs(y[2,]-y[1,]))]
SSE2 = function(h){
ESS = 0
d <- data.frame(X = NewData2$CIncidence)
d$Y <- NewData2$CBirths
sd = sqrt(var(d$X))
fit <- lm(CBirths ~ CIncidence, data=NewData2)
lpest1 <- locPolSmootherC(d$X,d$Y , d$X, bw = h * sd, deg = 1, gaussK)
lpest2 <- locpol(Y ~ X, data = d, bw = h * sd , kernel = gaussK, deg = 1, xeval = d$X)
ESS = sum(lpest2$residuals^2)
error = fitted.values(fit) - ( lpest1$beta0 + lpest2$lpFit$Y1 * lpest2$lpFit[,1])
ESS1 = sum(error^2)
return(c(ESS/1e+12,ESS1/1e+15))
}
y[2,]-y[1,]
x[min(abs(as.vector(y[2,]-y[1,])))]
y[2,]-y[1,]->v
v
typeof(v)
unlist(v)
x[min(abs(unlist(y[2,]-y[1,])))]
unlist(y[2,]-y[1])
abs(unlist(y[2,]-y[1,]))
min(abs(unlist(y[2,]-y[1,])))
x[y=min(abs(unlist(y[2,]-y[1,])))]
x[y==min(abs(unlist(y[2,]-y[1,])))]
x[abs(unlist(y[2,]-y[1,]))==min(abs(unlist(y[2,]-y[1,])))]
d <- data.frame(X = NewData2$CIncidence)
d$Y <- NewData2$CBirths
plot(d$X,d$Y)
sd = sqrt(var(d$X))
lpest1 <- locPolSmootherC(d$X,d$Y , d$X, bw = .225 * sd , deg = 1, gaussK)
h=.25
lpest1 <- locPolSmootherC(d$X,d$Y , d$X, bw = h * sd , deg = 1, gaussK)
lpest2 <- locpol(Y ~ X, data = d, bw = h * sd , kernel = gaussK, deg = 1, xeval = d$X)
lpest2$lpFit
lpest2$residuals
plot(lpest2$residuals)
plot(lpest2$residuals, type ="l")
lpest1
View(lpest1)
lpest2 <- locpol(Y ~ X, data = d, bw = h * sd , kernel = gaussK, deg = 1, xeval = d$X)
data.frame(Time = NewData1[["Time"]],lpest1[["beta1"]],lpest2[["residuals"]])
NewData1[["Time"]]
head(NewData1)
NewData1[["Time"]]
NewData1[[Time]]
lpest1[["beta1"]]
lpest2[["residuals"]]
NewData1 = cbind(Time=seq(from = 1944, to= 1964.983, length.out = length(Fdat1)),CIncidence=Fdat1[,1],CBirths=Fdat1[,2])
NewData1[["Time"]]
seq(from = 1944, to= 1964.983, length.out = length(Fdat1))
data.frame(Time = NewData2[["Time"]],lpest1[["beta1"]],lpest2[["residuals"]])
data.frame(Time = NewData2[["Time"]], beta1=lpest1[["beta1"]],residuals=lpest2[["residuals"]])
library(pomp)
require(locpol)
library(plyr)
library(reshape2)
library(magrittr)
library(ggplot2)
library(foreach)
library(doParallel)
registerDoParallel()
Biweekly=function(Data){
n=nrow(Data)/2
m=ncol(Data)
mat = matrix( ,n,m)
for (i in 0:n - 1 ){
mat[i + 1,]= rep(0, m)
for (j in 1:2) {
x = (2*i)+j
mat[i+1,] = c(mat[i+1,]) + c(Data[x,])
}
}
return(mat)
}
Cumulative = function(Data){
n=nrow(Data)
m=ncol(Data)
Dta=matrix( ,n,m)
Dta[1,] = Data[1,]
for (i in 2:n){
Dta[i,] = Dta[i-1,] + Data[i,]
}
return(Dta)
}
SSE1 = function(h){
ESS = 0
d <- data.frame(X = NewData2$CIncidence)
d$Y <- NewData2$CBirths
sd = sqrt(var(d$X))
lpest1 <- locPolSmootherC(d$X,d$Y , d$X, bw = h * sd, deg = 1, gaussK)
lpest2 <- locpol(Y ~ X, data = d, bw = h * sd , kernel = gaussK, deg = 1, xeval = d$X)
ESS = sum(lpest2$residuals^2)
return(ESS)
}
SSE2 = function(h){
ESS = 0
d <- data.frame(X = NewData2$CIncidence)
d$Y <- NewData2$CBirths
sd = sqrt(var(d$X))
fit <- lm(CBirths ~ CIncidence, data=NewData2)
lpest1 <- locPolSmootherC(d$X,d$Y , d$X, bw = h * sd, deg = 1, gaussK)
lpest2 <- locpol(Y ~ X, data = d, bw = h * sd , kernel = gaussK, deg = 1, xeval = d$X)
ESS = sum(lpest2$residuals^2)
error = fitted.values(fit) - ( lpest1$beta0 + lpest2$lpFit$Y1 * lpest2$lpFit[,1])
ESS1 = sum(error^2)
return(c(ESS/1e+12,ESS1/1e+15))
}
"Loading dataset"
load("~/GitHub/Measles/twentycities.rda")
demog$town = factor(demog$town)
measles$town = factor(measles$town)
"creating City datasets"
for (names in levels(measles$town)) {
tmp <- subset(measles, town == names)
tmp %>%
dcast(date~"cases", fun.aggregate = sum) %>%
mutate(year=as.integer(format(date,"%Y"))) %>%
subset(year>=1944 & year<1965) %>%
mutate(time=(julian(date,origin=as.Date("1944-01-01")))/365.25+1944) %>%
subset(time>1944 & time<1965, select=c(time,cases)) -> tmp
##################
tmp1<- subset(demog, town == names)
tmp1<-tmp1[,-1]
tmp1 %>% subset(year>=1944 & year<1964) %>%
summarize(
time= tmp$time,
birthrate=predict(smooth.spline(x=year+0.5,y=births),x=time-4)$y
) -> covar
merge(tmp,covar, by = "time")->x
NewData<- as.matrix(x)
Fdat = Biweekly(NewData)# Biweekly data
Fdat.d = cbind(Fdat[-(1:8),2],Fdat[1:539,3]) # Adjusting for the  delay caused by maternal immunity
Fdat1 = Cumulative(Fdat.d)
NewData1 = cbind(Time=seq(from = 1944, to= 1964.983, length.out = length(Fdat1)),CIncidence=Fdat1[,1],CBirths=Fdat1[,2])
NewData2 = as.data.frame(NewData1)
h = seq(.05,5,.005)
y = sapply(h,SSE2)
h = h[abs(unlist(y[2,]-y[1,]))==min(abs(unlist(y[2,]-y[1,])))]
d <- data.frame(X = NewData2$CIncidence)
d$Y <- NewData2$CBirths
plot(d$X,d$Y)
sd = sqrt(var(d$X))
lpest1 <- locPolSmootherC(d$X,d$Y , d$X, bw = h * sd , deg = 1, gaussK)
lpest2 <- locpol(Y ~ X, data = d, bw = h * sd , kernel = gaussK, deg = 1, xeval = d$X)
data.frame(Time = NewData2[["Time"]], beta1=lpest1[["beta1"]],residuals=lpest2[["residuals"]])->result
assign( paste0(names,"_SRA"),result)
}
View(Bedwellty_SRA)
